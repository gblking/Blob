I"Il<h2 id="效果图">效果图</h2>

<p><img src="http://localhost:4001/Blob/assets/images/post/20211214/countTo.gif" alt="告诫" /></p>

<h2 id="代码">代码</h2>

<h3 id="template">template</h3>

<div class="language-vue highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;</span><span class="k">template</span><span class="nt">&gt;</span>
  <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"count-to"</span><span class="nt">&gt;</span>
    
  <span class="nt">&lt;/span&gt;</span>
<span class="nt">&lt;/</span><span class="k">template</span><span class="nt">&gt;</span>
</code></pre></div></div>

<h3 id="script">script</h3>

<div class="language-vue highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;</span><span class="k">script</span><span class="nt">&gt;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">onUnmounted</span><span class="p">,</span> <span class="nx">ref</span><span class="p">,</span> <span class="nx">computed</span><span class="p">,</span> <span class="nx">onMounted</span><span class="p">,</span> <span class="nx">getCurrentInstance</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">vue</span><span class="dl">"</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span>
  <span class="nx">requestAnimationFrame</span><span class="p">,</span>
  <span class="nx">cancelAnimationFrame</span><span class="p">,</span>
<span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">./requestAnimationFrame.js</span><span class="dl">"</span><span class="p">;</span>
<span class="k">export</span> <span class="k">default</span> <span class="p">{</span>
  <span class="na">name</span><span class="p">:</span> <span class="dl">"</span><span class="s2">CountTo</span><span class="dl">"</span><span class="p">,</span>
  <span class="na">props</span><span class="p">:</span> <span class="p">{</span>
    <span class="c1">// 开始值</span>
    <span class="na">from</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">type</span><span class="p">:</span> <span class="nb">Number</span><span class="p">,</span>
      <span class="na">required</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
      <span class="na">default</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
    <span class="p">},</span>
    <span class="c1">// 结束值</span>
    <span class="na">to</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">type</span><span class="p">:</span> <span class="nb">Number</span><span class="p">,</span>
      <span class="na">required</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
      <span class="na">default</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span>
    <span class="p">},</span>
    <span class="c1">// 持续时间，毫秒为单位</span>
    <span class="na">duration</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">type</span><span class="p">:</span> <span class="nb">Number</span><span class="p">,</span>
      <span class="na">required</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
      <span class="na">default</span><span class="p">:</span> <span class="mi">3000</span><span class="p">,</span>
    <span class="p">},</span>
    <span class="c1">// 自动播放</span>
    <span class="na">autoplay</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">type</span><span class="p">:</span> <span class="nb">Boolean</span><span class="p">,</span>
      <span class="na">required</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
      <span class="na">default</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
    <span class="p">},</span>
    <span class="c1">// 显示小数位数</span>
    <span class="na">decimals</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">type</span><span class="p">:</span> <span class="nb">Number</span><span class="p">,</span>
      <span class="na">required</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
      <span class="na">default</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
      <span class="nx">validator</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="nx">value</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">;</span>
      <span class="p">},</span>
    <span class="p">},</span>
    <span class="c1">// 十进制分割</span>
    <span class="na">decimal</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">type</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span>
      <span class="na">required</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
      <span class="na">default</span><span class="p">:</span> <span class="dl">"</span><span class="s2">.</span><span class="dl">"</span><span class="p">,</span>
    <span class="p">},</span>
    <span class="c1">// 分隔符</span>
    <span class="na">separator</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">type</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span>
      <span class="na">required</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
      <span class="na">default</span><span class="p">:</span> <span class="dl">"</span><span class="s2">,</span><span class="dl">"</span><span class="p">,</span>
    <span class="p">},</span>
    <span class="c1">// 前缀</span>
    <span class="na">prefix</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">type</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span>
      <span class="na">required</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
      <span class="na">default</span><span class="p">:</span> <span class="dl">""</span><span class="p">,</span>
    <span class="p">},</span>
    <span class="c1">// 后缀</span>
    <span class="na">suffix</span><span class="p">:</span> <span class="p">{</span>
      <span class="na">type</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span>
      <span class="na">required</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
      <span class="na">default</span><span class="p">:</span> <span class="dl">""</span><span class="p">,</span>
    <span class="p">},</span>
  <span class="p">},</span>

  <span class="nx">setup</span><span class="p">()</span> <span class="p">{</span>
    <span class="c1">// 是否为倒数，即数字从 大 -&gt; 小</span>
    <span class="kd">const</span> <span class="nx">countDown</span> <span class="o">=</span> <span class="nx">computed</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="nx">ctx</span><span class="p">.</span><span class="k">from</span> <span class="o">&gt;</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">to</span><span class="p">);</span>

    <span class="cm">/**
     * 判断是否为数字
     */</span>
    <span class="kd">const</span> <span class="nx">isNumber</span> <span class="o">=</span> <span class="p">(</span><span class="nx">val</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="k">return</span> <span class="o">!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">val</span><span class="p">));</span>
    <span class="p">};</span>

    <span class="cm">/**
     *  格式化数据
     */</span>
    <span class="kd">const</span> <span class="nx">formatNumber</span> <span class="o">=</span> <span class="p">(</span><span class="nx">num</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="nx">num</span> <span class="o">=</span> <span class="nx">num</span><span class="p">.</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">decimals</span><span class="p">);</span>
      <span class="nx">num</span> <span class="o">+=</span> <span class="dl">""</span><span class="p">;</span>
      <span class="kd">const</span> <span class="nx">x</span> <span class="o">=</span> <span class="nx">num</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">"</span><span class="s2">.</span><span class="dl">"</span><span class="p">);</span>
      <span class="kd">let</span> <span class="nx">x1</span> <span class="o">=</span> <span class="nx">x</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
      <span class="kd">const</span> <span class="nx">x2</span> <span class="o">=</span> <span class="nx">x</span><span class="p">.</span><span class="nx">length</span> <span class="o">&gt;</span> <span class="mi">1</span> <span class="p">?</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">decimal</span> <span class="o">+</span> <span class="nx">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="p">:</span> <span class="dl">""</span><span class="p">;</span>
      <span class="kd">const</span> <span class="nx">rgx</span> <span class="o">=</span> <span class="sr">/</span><span class="se">(\d</span><span class="sr">+</span><span class="se">)(\d{3})</span><span class="sr">/</span><span class="p">;</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">separator</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">isNumber</span><span class="p">(</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">separator</span><span class="p">))</span> <span class="p">{</span>
        <span class="k">while</span> <span class="p">(</span><span class="nx">rgx</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">x1</span><span class="p">))</span> <span class="p">{</span>
          <span class="nx">x1</span> <span class="o">=</span> <span class="nx">x1</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">rgx</span><span class="p">,</span> <span class="dl">"</span><span class="s2">$1</span><span class="dl">"</span> <span class="o">+</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">separator</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">$2</span><span class="dl">"</span><span class="p">);</span>
        <span class="p">}</span>
      <span class="p">}</span>
      <span class="k">return</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">prefix</span> <span class="o">+</span> <span class="nx">x1</span> <span class="o">+</span> <span class="nx">x2</span> <span class="o">+</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">suffix</span><span class="p">;</span>
    <span class="p">};</span>

    <span class="cm">/**
     * 开始滚动动画
     */</span>
    <span class="kd">const</span> <span class="nx">start</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="nx">rAF</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">requestAnimationFrame</span><span class="p">(</span><span class="nx">count</span><span class="p">);</span>
    <span class="p">};</span>

    <span class="cm">/**
     * time: 下次动画时间(毫秒)
     */</span>
    <span class="kd">const</span> <span class="nx">count</span> <span class="o">=</span> <span class="p">(</span><span class="nx">time</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">startTime</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span> <span class="nx">startTime</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">time</span><span class="p">;</span>
      <span class="kd">const</span> <span class="nx">progress</span> <span class="o">=</span> <span class="nx">time</span> <span class="o">-</span> <span class="nx">startTime</span><span class="p">.</span><span class="nx">value</span><span class="p">;</span> <span class="c1">// 进度</span>
      <span class="kd">let</span> <span class="nx">printVal</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">countDown</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">printVal</span> <span class="o">=</span> <span class="nx">ctx</span><span class="p">.</span><span class="k">from</span> <span class="o">-</span> <span class="p">(</span><span class="nx">ctx</span><span class="p">.</span><span class="k">from</span> <span class="o">-</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">to</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="nx">progress</span> <span class="o">/</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">duration</span><span class="p">);</span>
      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nx">printVal</span> <span class="o">=</span> <span class="nx">ctx</span><span class="p">.</span><span class="k">from</span> <span class="o">+</span> <span class="p">(</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">to</span> <span class="o">-</span> <span class="nx">ctx</span><span class="p">.</span><span class="k">from</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="nx">progress</span> <span class="o">/</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">duration</span><span class="p">);</span>
      <span class="p">}</span>

      <span class="c1">// 比较当前值与结束值</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">countDown</span><span class="p">.</span><span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">printVal</span> <span class="o">=</span> <span class="nx">printVal</span> <span class="o">&lt;</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">to</span> <span class="p">?</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">to</span> <span class="p">:</span> <span class="nx">printVal</span><span class="p">;</span>
      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nx">printVal</span> <span class="o">=</span> <span class="nx">printVal</span> <span class="o">&gt;</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">to</span> <span class="p">?</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">to</span> <span class="p">:</span> <span class="nx">printVal</span><span class="p">;</span>
      <span class="p">}</span>

      <span class="nx">displayValue</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">formatNumber</span><span class="p">(</span><span class="nx">printVal</span><span class="p">);</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">progress</span> <span class="o">&lt;</span> <span class="nx">ctx</span><span class="p">.</span><span class="nx">duration</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">rAF</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">requestAnimationFrame</span><span class="p">(</span><span class="nx">count</span><span class="p">);</span>
      <span class="p">}</span>
    <span class="p">};</span>

    <span class="kd">const</span> <span class="p">{</span> <span class="nx">ctx</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">getCurrentInstance</span><span class="p">();</span>
    <span class="kd">let</span> <span class="nx">startTime</span> <span class="o">=</span> <span class="nx">ref</span><span class="p">(</span><span class="kc">null</span><span class="p">);</span>
    <span class="kd">let</span> <span class="nx">rAF</span> <span class="o">=</span> <span class="nx">ref</span><span class="p">(</span><span class="kc">null</span><span class="p">);</span> <span class="c1">// requestAnimationFrame setTimeOut</span>
    <span class="kd">let</span> <span class="nx">displayValue</span> <span class="o">=</span> <span class="nx">ref</span><span class="p">(</span><span class="nx">formatNumber</span><span class="p">(</span><span class="nx">ctx</span><span class="p">.</span><span class="k">from</span><span class="p">));</span> <span class="c1">// 页面显示内容</span>

    <span class="nx">onMounted</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">ctx</span><span class="p">.</span><span class="nx">autoplay</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">start</span><span class="p">();</span>
      <span class="p">}</span>
    <span class="p">});</span>
    <span class="nx">onUnmounted</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
      <span class="nx">cancelAnimationFrame</span><span class="p">(</span><span class="nx">rAF</span><span class="p">.</span><span class="nx">value</span><span class="p">);</span>
    <span class="p">});</span>

    <span class="k">return</span> <span class="p">{</span>
      <span class="nx">displayValue</span><span class="p">,</span>
    <span class="p">};</span>
  <span class="p">},</span>
<span class="p">};</span>
<span class="nt">&lt;/</span><span class="k">script</span><span class="nt">&gt;</span>
</code></pre></div></div>

<h3 id="css">css</h3>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nt">style</span> <span class="nt">lang</span><span class="o">=</span><span class="s1">"scss"</span> <span class="nt">scoped</span><span class="o">&gt;</span>
<span class="nc">.count-to</span> <span class="p">{</span>
  <span class="nl">font-weight</span><span class="p">:</span> <span class="m">600</span><span class="p">;</span>
  <span class="nl">font-size</span><span class="p">:</span> <span class="m">24px</span><span class="p">;</span>
  <span class="nl">font-family</span><span class="p">:</span> <span class="s1">"PingFang SC Bold"</span><span class="p">;</span>
<span class="p">}</span>
<span class="o">&lt;/</span><span class="nt">style</span><span class="o">&gt;</span>
</code></pre></div></div>

<h3 id="requestanimationframejs">requestAnimationFrame.js</h3>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">let</span> <span class="nx">lastTime</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="kd">const</span> <span class="nx">prefixes</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">webkit moz ms o</span><span class="dl">"</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">"</span><span class="s2"> </span><span class="dl">"</span><span class="p">);</span> <span class="c1">// 各浏览器前缀</span>

<span class="kd">let</span> <span class="nx">requestAnimationFrame</span><span class="p">;</span>
<span class="kd">let</span> <span class="nx">cancelAnimationFrame</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">isServer</span> <span class="o">=</span> <span class="k">typeof</span> <span class="nb">window</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">undefined</span><span class="dl">"</span><span class="p">;</span>
<span class="k">if</span> <span class="p">(</span><span class="nx">isServer</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">requestAnimationFrame</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span><span class="p">;</span>
  <span class="p">};</span>
  <span class="nx">cancelAnimationFrame</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span><span class="p">;</span>
  <span class="p">};</span>
<span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
  <span class="nx">requestAnimationFrame</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">requestAnimationFrame</span><span class="p">;</span>
  <span class="nx">cancelAnimationFrame</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">cancelAnimationFrame</span><span class="p">;</span>
  <span class="kd">let</span> <span class="nx">prefix</span><span class="p">;</span>
  <span class="c1">// 通过遍历各浏览器前缀，来得到requestAnimationFrame和cancelAnimationFrame在当前浏览器的实现形式</span>
  <span class="k">for</span> <span class="p">(</span><span class="kd">let</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">prefixes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">requestAnimationFrame</span> <span class="o">&amp;&amp;</span> <span class="nx">cancelAnimationFrame</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">break</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="nx">prefix</span> <span class="o">=</span> <span class="nx">prefixes</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
    <span class="nx">requestAnimationFrame</span> <span class="o">=</span>
      <span class="nx">requestAnimationFrame</span> <span class="o">||</span> <span class="nb">window</span><span class="p">[</span><span class="nx">prefix</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">RequestAnimationFrame</span><span class="dl">"</span><span class="p">];</span>
    <span class="nx">cancelAnimationFrame</span> <span class="o">=</span>
      <span class="nx">cancelAnimationFrame</span> <span class="o">||</span>
      <span class="nb">window</span><span class="p">[</span><span class="nx">prefix</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">CancelAnimationFrame</span><span class="dl">"</span><span class="p">]</span> <span class="o">||</span>
      <span class="nb">window</span><span class="p">[</span><span class="nx">prefix</span> <span class="o">+</span> <span class="dl">"</span><span class="s2">CancelRequestAnimationFrame</span><span class="dl">"</span><span class="p">];</span>
  <span class="p">}</span>

  <span class="c1">// 如果当前浏览器不支持requestAnimationFrame和cancelAnimationFrame，则会退到setTimeout</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">requestAnimationFrame</span> <span class="o">||</span> <span class="o">!</span><span class="nx">cancelAnimationFrame</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">requestAnimationFrame</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
      <span class="kd">const</span> <span class="nx">currTime</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">().</span><span class="nx">getTime</span><span class="p">();</span>
      <span class="c1">// 为了使setTimteout的尽可能的接近每秒60帧的效果</span>
      <span class="kd">const</span> <span class="nx">timeToCall</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">16</span> <span class="o">-</span> <span class="p">(</span><span class="nx">currTime</span> <span class="o">-</span> <span class="nx">lastTime</span><span class="p">));</span>
      <span class="kd">const</span> <span class="nx">id</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
        <span class="nx">callback</span><span class="p">(</span><span class="nx">currTime</span> <span class="o">+</span> <span class="nx">timeToCall</span><span class="p">);</span>
      <span class="p">},</span> <span class="nx">timeToCall</span><span class="p">);</span>
      <span class="nx">lastTime</span> <span class="o">=</span> <span class="nx">currTime</span> <span class="o">+</span> <span class="nx">timeToCall</span><span class="p">;</span>
      <span class="k">return</span> <span class="nx">id</span><span class="p">;</span>
    <span class="p">};</span>

    <span class="nx">cancelAnimationFrame</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">id</span><span class="p">)</span> <span class="p">{</span>
      <span class="nb">window</span><span class="p">.</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">id</span><span class="p">);</span>
    <span class="p">};</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="k">export</span> <span class="p">{</span> <span class="nx">requestAnimationFrame</span><span class="p">,</span> <span class="nx">cancelAnimationFrame</span> <span class="p">};</span>
</code></pre></div></div>

<h2 id="api">API</h2>

<table>
  <thead>
    <tr>
      <th>属性</th>
      <th>说明</th>
      <th>类型</th>
      <th>可选值</th>
      <th>默认值</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>from</td>
      <td>起始值</td>
      <td>Number</td>
      <td>-</td>
      <td>0</td>
    </tr>
    <tr>
      <td>to</td>
      <td>结束值</td>
      <td>Number</td>
      <td>-</td>
      <td>100</td>
    </tr>
    <tr>
      <td>duration</td>
      <td>持续时间，单位毫秒</td>
      <td>Number</td>
      <td>-</td>
      <td>3000</td>
    </tr>
  </tbody>
</table>
:ET