I"EE<h2 id="概述">概述</h2>

<p>使用 typescript 进行 vue 开发，普通的 vue 开发模式无法享受到 typescript 的特性，如：类型检测、类型推断。 通过使用 class 语法有助于我们得到 ts 的类型检测。</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">template</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span>
    <span class="o">&lt;</span><span class="nx">button</span> <span class="nx">v</span><span class="o">-</span><span class="nx">on</span><span class="p">:</span><span class="nx">click</span><span class="o">=</span><span class="dl">"</span><span class="s2">decrement</span><span class="dl">"</span><span class="o">&gt;-&lt;</span><span class="sr">/button</span><span class="err">&gt;
</span>    <span class="mi">8</span>
    <span class="o">&lt;</span><span class="nx">button</span> <span class="nx">v</span><span class="o">-</span><span class="nx">on</span><span class="p">:</span><span class="nx">click</span><span class="o">=</span><span class="dl">"</span><span class="s2">increment</span><span class="dl">"</span><span class="o">&gt;+&lt;</span><span class="sr">/button</span><span class="err">&gt;
</span>  <span class="o">&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/template</span><span class="err">&gt;
</span>
<span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="k">import</span> <span class="nx">Vue</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">vue</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">Component</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">vue-class-component</span><span class="dl">'</span>

<span class="c1">// Define the component in class-style</span>
<span class="p">@</span><span class="nd">Component</span>
<span class="k">export</span> <span class="k">default</span> <span class="kd">class</span> <span class="nx">Counter</span> <span class="kd">extends</span> <span class="nx">Vue</span> <span class="p">{</span>
  <span class="c1">// Class properties will be component data</span>
  <span class="nx">count</span> <span class="o">=</span> <span class="mi">0</span>

  <span class="c1">// Methods will be component methods</span>
  <span class="nx">increment</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">count</span><span class="o">++</span>
  <span class="p">}</span>

  <span class="nx">decrement</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">count</span><span class="o">--</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span></code></pre></div></div>

<h2 id="知识点">知识点</h2>

<p><a href="https://www.tslang.cn/docs/home.html">TypeScript</a><br />
<a href="https://cli.vuejs.org/zh/guide/">Vue CLI</a><br />
<a href="https://class-component.vuejs.org/">vue_class_component</a><br />
<a href="https://github.com/kaorun343/vue-property-decorator">vue_property_decorator</a><br />
<a href="https://github.com/ktsn/vuex-class/">vuex-class</a></p>

<h2 id="安装">安装</h2>

<p>创建项目
<img src="http://localhost:4001/Blob/assets/images/post/20220112/0.png" alt="0" /></p>

<p>选择 “Manually select features”<br />
<img src="http://localhost:4001/Blob/assets/images/post/20220112/1.png" alt="1" /></p>

<p>选中 TypeScript 功能以使用 Vue 类组件。如果需要，还可以添加其他功能：
<img src="http://localhost:4001/Blob/assets/images/post/20220112/2.png" alt="2" /></p>

<p>使用 class-style 语法
<img src="http://localhost:4001/Blob/assets/images/post/20220112/3.png" alt="3" /></p>

<h2 id="vue-class-component">vue-class-component</h2>

<h3 id="component">@Component</h3>

<p><code class="language-plaintext highlighter-rouge">@Component</code> 装饰器创建 Class Vue 组件：</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">Vue</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">vue</span><span class="dl">"</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">Component</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">vue-class-component</span><span class="dl">"</span><span class="p">;</span>

<span class="c1">// HelloWorld class will be a Vue component</span>
<span class="p">@</span><span class="nd">Component</span>
<span class="k">export</span> <span class="k">default</span> <span class="kd">class</span> <span class="nx">HelloWorld</span> <span class="kd">extends</span> <span class="nx">Vue</span> <span class="p">{}</span>
</code></pre></div></div>

<h3 id="data">Data</h3>

<p>初始<code class="language-plaintext highlighter-rouge">data</code>可以声明为类属性：</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">template</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;&lt;</span><span class="sr">/div</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/template</span><span class="err">&gt;
</span>
<span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="k">import</span> <span class="nx">Vue</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">vue</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">Component</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">vue-class-component</span><span class="dl">'</span>

<span class="p">@</span><span class="nd">Component</span>
<span class="k">export</span> <span class="k">default</span> <span class="kd">class</span> <span class="nx">HelloWorld</span> <span class="kd">extends</span> <span class="nx">Vue</span> <span class="p">{</span>
  <span class="c1">// Declared as component data</span>
  <span class="nx">message</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Hello World!</span><span class="dl">'</span>
<span class="p">}</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span></code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">注意：</code>当初始化<code class="language-plaintext highlighter-rouge">data</code>数据为<code class="language-plaintext highlighter-rouge">undefined</code>,使用上面这种方式的，当对 data 数据进行改变时无法被监听到。可使用<code class="language-plaintext highlighter-rouge">null</code>代替或者使用<code class="language-plaintext highlighter-rouge">data</code> hook 钩子：</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">Vue</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">vue</span><span class="dl">"</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">Component</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">vue-class-component</span><span class="dl">"</span><span class="p">;</span>

<span class="p">@</span><span class="nd">Component</span>
<span class="k">export</span> <span class="k">default</span> <span class="kd">class</span> <span class="nx">HelloWorld</span> <span class="kd">extends</span> <span class="nx">Vue</span> <span class="p">{</span>
  <span class="c1">// `message` will be reactive with `null` value</span>
  <span class="nx">message</span> <span class="o">=</span> <span class="kc">null</span><span class="p">;</span>

  <span class="c1">// See Hooks section for details about `data` hook inside class.</span>
  <span class="nx">data</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="p">{</span>
      <span class="c1">// `hello` will be reactive as it is declared via `data` hook.</span>
      <span class="na">hello</span><span class="p">:</span> <span class="kc">undefined</span><span class="p">,</span>
    <span class="p">};</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="methods">Methods</h3>

<p><code class="language-plaintext highlighter-rouge">methods</code>可以直接声明为 class 原型方法：</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">template</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="nx">button</span> <span class="nx">v</span><span class="o">-</span><span class="nx">on</span><span class="p">:</span><span class="nx">click</span><span class="o">=</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="o">&gt;</span><span class="nx">Click</span><span class="o">&lt;</span><span class="sr">/button</span><span class="err">&gt;
</span><span class="o">&lt;</span><span class="sr">/template</span><span class="err">&gt;
</span>
<span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="k">import</span> <span class="nx">Vue</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">vue</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">Component</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">vue-class-component</span><span class="dl">'</span>

<span class="p">@</span><span class="nd">Component</span>
<span class="k">export</span> <span class="k">default</span> <span class="kd">class</span> <span class="nx">HelloWorld</span> <span class="kd">extends</span> <span class="nx">Vue</span> <span class="p">{</span>
  <span class="c1">// Declared as component method</span>
  <span class="nx">hello</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Hello World!</span><span class="dl">'</span><span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span></code></pre></div></div>

<h3 id="computed">Computed</h3>

<p><code class="language-plaintext highlighter-rouge">computed</code>可以声明为 class 的<code class="language-plaintext highlighter-rouge">getter/setter</code>属性：</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">template</span><span class="o">&gt;</span>
  <span class="o">&lt;</span><span class="nx">input</span> <span class="nx">v</span><span class="o">-</span><span class="nx">model</span><span class="o">=</span><span class="dl">"</span><span class="s2">name</span><span class="dl">"</span><span class="o">&gt;</span>
<span class="o">&lt;</span><span class="sr">/template</span><span class="err">&gt;
</span>
<span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="k">import</span> <span class="nx">Vue</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">vue</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">Component</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">vue-class-component</span><span class="dl">'</span>

<span class="p">@</span><span class="nd">Component</span>
<span class="k">export</span> <span class="k">default</span> <span class="kd">class</span> <span class="nx">HelloWorld</span> <span class="kd">extends</span> <span class="nx">Vue</span> <span class="p">{</span>
  <span class="nx">firstName</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">John</span><span class="dl">'</span>
  <span class="nx">lastName</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">Doe</span><span class="dl">'</span>

  <span class="c1">// Declared as computed property getter</span>
  <span class="kd">get</span> <span class="nx">name</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">+</span> <span class="dl">'</span><span class="s1"> </span><span class="dl">'</span> <span class="o">+</span> <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span>
  <span class="p">}</span>

  <span class="c1">// Declared as computed property setter</span>
  <span class="kd">set</span> <span class="nx">name</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">splitted</span> <span class="o">=</span> <span class="nx">value</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="dl">'</span><span class="s1"> </span><span class="dl">'</span><span class="p">)</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">firstName</span> <span class="o">=</span> <span class="nx">splitted</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="k">this</span><span class="p">.</span><span class="nx">lastName</span> <span class="o">=</span> <span class="nx">splitted</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">||</span> <span class="dl">''</span>
  <span class="p">}</span>
<span class="p">}</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span></code></pre></div></div>

<h3 id="hooks">Hooks</h3>

<p><code class="language-plaintext highlighter-rouge">data</code>, <code class="language-plaintext highlighter-rouge">render</code> 和其他 Vue 生命周期钩子函数都可以在 class 中直接声明</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">Vue</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">vue</span><span class="dl">"</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">Component</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">vue-class-component</span><span class="dl">"</span><span class="p">;</span>

<span class="p">@</span><span class="nd">Component</span>
<span class="k">export</span> <span class="k">default</span> <span class="kd">class</span> <span class="nx">HelloWorld</span> <span class="kd">extends</span> <span class="nx">Vue</span> <span class="p">{</span>
  <span class="c1">// Declare mounted lifecycle hook</span>
  <span class="nx">mounted</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">mounted</span><span class="dl">"</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="c1">// Declare render function</span>
  <span class="nx">render</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">return</span> <span class="o">&lt;</span><span class="nx">div</span><span class="o">&gt;</span><span class="nx">Hello</span> <span class="nx">World</span><span class="o">!&lt;</span><span class="sr">/div&gt;</span><span class="err">;
</span>  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="components">Components</h3>

<p>引入 components:</p>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&lt;</span><span class="nx">template</span><span class="o">&gt;</span>
 <span class="o">&lt;</span><span class="nx">OtherComponent</span> <span class="o">/&gt;</span>
<span class="o">&lt;</span><span class="sr">/template</span><span class="err">&gt;
</span>
<span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
<span class="k">import</span> <span class="nx">Vue</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">vue</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">Component</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">vue-class-component</span><span class="dl">'</span>
<span class="k">import</span> <span class="nx">OtherComponent</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./OtherComponent.vue</span><span class="dl">'</span>

<span class="p">@</span><span class="nd">Component</span><span class="p">({</span>
 <span class="na">components</span><span class="p">:</span> <span class="p">{</span>
   <span class="nx">OtherComponent</span>
 <span class="p">}</span>
<span class="p">})</span>
<span class="k">export</span> <span class="k">default</span> <span class="kd">class</span> <span class="nx">HelloWorld</span> <span class="kd">extends</span> <span class="nx">Vue</span> <span class="p">{}</span>
<span class="o">&lt;</span><span class="sr">/script</span><span class="err">&gt;
</span></code></pre></div></div>
:ET